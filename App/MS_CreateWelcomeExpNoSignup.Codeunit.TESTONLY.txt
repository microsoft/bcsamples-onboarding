codeunit 70074172 MS_CreateWelcomeExpNoSignup
{
    Subtype = Install;

    trigger OnInstallAppPerCompany()
    begin
        AddGuidedExperienceItemAndChecklist();        // Code for company related operations
    end;


    local procedure AddGuidedExperienceItemAndChecklist()
    var
        //Define the texts for the Guided Experience Items the users will see in their checklists
        //If the user has profiled as coming from Excel, we want to show them a checklist item that makes them feel welcomed right off the bat
        SystemShortTitleTxt: Label 'Excel users love us';
        SystemTitleTxt: Label 'Excel users love using Business Central';
        SystemDescriptionTxt: Label 'With a seamless integration to Excel, you can easily work with data in Excel, and even import it back into Business Central. Great for manipulating lists of data.';

        //Depending on the user's company profile, add a Guided Experience Item that shows we know what they care about
        UsersShortTitleTxt: Label 'So, you have 10-25 users?';
        UsersTitleTxt: Label 'Your company is a great fit for Business Central';
        UsersDescriptionTxt: Label 'Business Central is great for companies with a user base of 10-25, but it does not stop there. Business Central empowers you to grow your business. See the video to learn how.';

        //When the user answered questions in the profiler (on your web site), ask them what they're looking for, and load a Guided Experience Item that confirms they've gone to the right place
        InterestShortTitleTxt: Label 'Trade is in our DNA';
        InterestTitleTxt: Label 'Trade is a cornerstone of Business Central';
        InterestDescriptionTxt: Label 'Business Central is one of the Worlds most powerful business solutions when it comes to Basic trade. Trade can be set up in any variance you want to help you run your business processes.';

        SpotlightTourType: Enum "Spotlight Tour Type";
        SpotlightTourTexts: Dictionary of [Enum "Spotlight Tour Text", Text];
        GuidedExperience: Codeunit "Guided Experience";
        GuidedExperienceType: Enum "Guided Experience Type";
        VideoCategory: Enum "Video Category";
        AssistedSetupGroup: Enum "Assisted Setup Group";
        Checklist: Codeunit Checklist;
        TempAllProfile: Record "All Profile";
    begin

        GuidedExperience.Remove(GuidedExperienceType::"Assisted Setup", ObjectType::Page, Page::MS_ShoeMgtShoeSizeGuide);
        GuidedExperience.Remove(GuidedExperienceType::"Assisted Setup", ObjectType::Page, Page::MS_ShoeManagementSetupGuide);

        GetVendorListSpotlightTourDictionary(SpotlightTourTexts);
        GuidedExperience.InsertSpotlightTour(SystemTitleTxt, SystemShortTitleTxt, SystemDescriptionTxt, 2, Page::"Vendor List", SpotlightTourType::"Open in Excel", SpotlightTourTexts);
        GuidedExperience.InsertVideo(UsersTitleTxt, UsersShortTitleTxt, UsersDescriptionTxt, 1, 'https://www.youtube.com/embed/nqM79hlHuOs', VideoCategory::GettingStarted);
        GuidedExperience.InsertVideo(InterestTitleTxt, InterestShortTitleTxt, InterestDescriptionTxt, 1, 'https://www.youtube.com/embed/YpWD4ZrLobI', VideoCategory::GettingStarted);
        GuidedExperience.InsertAssistedSetup('1: Let us define the shoe sizes', '1: Define shoe sizes', 'Shoe sizes are the foundation of every shoe management. Let us define them here. It is easy!', 1, ObjectType::Page, Page::MS_ShoeMgtShoeSizeGuide, AssistedSetupGroup::ShoeManagement, '', VideoCategory::GettingStarted, '');
        GuidedExperience.InsertAssistedSetup('2: Decide how Shoe Management works', '2: Shoe Management processes', 'Here we help you set up how Shoe Management should work for you in your business.', 1, ObjectType::Page, Page::MS_ShoeManagementSetupGuide, AssistedSetupGroup::ShoeManagement, '', VideoCategory::GettingStarted, '');

        GuidedExperience.InsertApplicationFeature(
            'Shoe Management setup is easy!',
            'Shoe Management Setup',
            'We have collected all the steps you need to set up Shoe Management into a nice checklist. We will guide you every step of the way!',
            1,
            ObjectType::Codeunit,
            Codeunit::MS_CustomShoeMgmtSetupList
            );

        Checklist.Insert(GuidedExperienceType::"Application Feature", ObjectType::Codeunit, Codeunit::MS_CustomShoeMgmtSetupList, 1000, TempAllProfile, false);
        Checklist.Insert(Page::"Vendor List", SpotlightTourType::"Open in Excel", 2000, TempAllProfile, false);
        Checklist.Insert(GuidedExperienceType::Video, 'https://www.youtube.com/embed/YpWD4ZrLobI', 3000, TempAllProfile, false);
        Checklist.Insert(GuidedExperienceType::Video, 'https://www.youtube.com/embed/nqM79hlHuOs', 4000, TempAllProfile, false);


    end;

    //Here we create the dictionary of texts used for the Spotlight tour where we call out the Excel integration (which we use on the Vendor List)
    local procedure GetVendorListSpotlightTourDictionary(var SpotlightTourTexts: Dictionary of [Enum "Spotlight Tour Text", Text])
    var
        AnalyseGLEntriesInExcelStep1Title: Label 'Easily analyse list data in Excel';
        AnalyseGLEntriesInExcelStep1Descr: Label 'You can export any list to Excel - even Excel online. You can also edit data in Excel';
        AnalyseGLEntriesInExcelStep2Title: Label 'Here you''ll find actions to open lists and cards in other applications';
        AnalyseGLEntriesInExcelStep2Descr: Label 'Try opening this Vendor list in Excel and import it back into Business Central';
        SpotlightTourText: Enum "Spotlight Tour Text";
    begin
        SpotlightTourTexts.Add(SpotlightTourText::Step1Title, AnalyseGLEntriesInExcelStep1Title);
        SpotlightTourTexts.Add(SpotlightTourText::Step1Text, AnalyseGLEntriesInExcelStep1Descr);
        SpotlightTourTexts.Add(SpotlightTourText::Step2Title, AnalyseGLEntriesInExcelStep2Title);
        SpotlightTourTexts.Add(SpotlightTourText::Step2Text, AnalyseGLEntriesInExcelStep2Descr);
    end;

    //These procedures are needed to get the roles for the Business Manager Role Center, which we need in order to insert items into the checklist
    local procedure GetRolesForNonEvaluationCompany(var TempAllProfile: Record "All Profile" temporary)
    begin
        AddRoleToList(TempAllProfile, Page::"Business Manager Role Center");
    end;

    local procedure AddRoleToList(var TempAllProfile: Record "All Profile" temporary; RoleCenterID: Integer)
    var
        AllProfile: Record "All Profile";
    begin
        AllProfile.SetRange("Role Center ID", RoleCenterID);
        AddRoleToList(AllProfile, TempAllProfile);
    end;

    local procedure AddRoleToList(var AllProfile: Record "All Profile"; var TempAllProfile: Record "All Profile" temporary)
    begin
        if AllProfile.FindFirst() then begin
            TempAllProfile.TransferFields(AllProfile);
            TempAllProfile.Insert();
        end;
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"User Triggers", 'OnAfterUserInitialization', '', false, false)]
    local procedure SetUserProfile()
    var
        UserPersonalization: Record "User Personalization";
        Profiles: Record "All Profile";
    begin

        Profiles.Reset;
        Profiles.SetRange(Profiles."Profile ID", 'SHOE MANAGER');
        if Profiles.FindSet() then message(Profiles."Profile ID" + ' found') else message(Profiles."Profile ID" + ' NOT found');

        if not UserPersonalization.Get(UserSecurityId()) then begin
            UserPersonalization."User SID" := UserSecurityId();
            UserPersonalization."App ID" := '{15136d9c-faf8-4455-a0d4-04e075da9b6f}';
            UserPersonalization.Scope := UserPersonalization.Scope::Tenant;
            UserPersonalization.Role := 'SHOE MANAGER';
            UserPersonalization."Profile ID" := 'SHOE MANAGER';
            UserPersonalization.Insert();
        end else begin
            UserPersonalization.Role := 'SHOE MANAGER';
            UserPersonalization."Profile ID" := 'SHOE MANAGER';
            UserPersonalization.Modify();
        end;
    end;
}

